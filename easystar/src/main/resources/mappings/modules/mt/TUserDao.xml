<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.jeesite.modules.mt.dao.TUserDao">
    
	<sql id="tUserColumns">
		a.id AS "id",
		a.t_userid AS "tUserid",
		a.t_loginname AS "tLoginname",
		a.t_name AS "tName",
		a.t_email AS "tEmail",
		a.t_phone AS "tPhone",
		a.qq AS "qq",
		a.wx AS "wx",
		a.t_photourl AS "tPhotourl",
		a.t_photoinfo AS "tPhotoinfo",
		a.t_company AS "tCompany",
		a.t_companyurl AS "tCompanyurl",
		a.createtime AS "createtime",
		a.t_acount AS "tAcount",
		a.t_inviter AS "tInviter",
		a.reserve1 AS "reserve1",
		a.reserve2 AS "reserve2",
		a.reserve3 AS "reserve3",
		a.reserve4 AS "reserve4",
		a.reserve5 AS "reserve5",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag"
	</sql>
	
	<sql id="tUserJoins">
	</sql>
    
	<select id="get" resultType="TUser">
		SELECT 
			<include refid="tUserColumns"/>
		FROM t_user a
		<include refid="tUserJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="TUser">
		SELECT 
			<include refid="tUserColumns"/>
		FROM t_user a
		<include refid="tUserJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="tLoginname !=null and tLoginname !=''">
				and a.t_loginname=#{tLoginname}
			</if>
			<if test="tName !=null and tName !=''">
				and a.t_name=#{tName}
			</if>
			<if test="tPhone !=null and tPhone !=''">
				and a.t_phone=#{tPhone}
			</if>
			<if test="tUserid !=null and tUserid !=''">
				and a.t_userid=#{tUserid}
			</if>
			<if test="tInviter !=null and tInviter !=''">
				and a.t_inviter=#{tInviter}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="TUser">
		SELECT 
			<include refid="tUserColumns"/>
		FROM t_user a
		<include refid="tUserJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO t_user(
			id,
			t_userid,
			t_loginname,
			t_name,
			t_email,
			t_phone,
			qq,
			wx,
			t_photourl,
			t_photoinfo,
			t_company,
			t_companyurl,
			createtime,
			t_inviter,
			reserve1,
			reserve2,
			reserve3,
			reserve4,
			reserve5,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{tUserid},
			#{tLoginname},
			#{tName},
			#{tEmail},
			#{tPhone},
			#{qq},
			#{wx},
			#{tPhotourl},
			#{tPhotoinfo},
			#{tCompany},
			#{tCompanyurl},
			now(),
			#{tInviter},
			#{reserve1},
			#{reserve2},
			#{reserve3},
			#{reserve4},
			#{reserve5},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE t_user SET 	
			t_userid = #{tUserid},
			t_loginname = #{tLoginname},
			t_name = #{tName},
			t_email = #{tEmail},
			t_phone = #{tPhone},
			qq = #{qq},
			wx = #{wx},
			t_photourl = #{tPhotourl},
			t_photoinfo = #{tPhotoinfo},
			t_company = #{tCompany},
			t_companyurl = #{tCompanyurl},
			createtime = now(),
			t_inviter = #{tInviter},
			reserve1 = #{reserve1},
			reserve2 = #{reserve2},
			reserve3 = #{reserve3},
			reserve4 = #{reserve4},
			reserve5 = #{reserve5},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE t_user SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
	<!-- 通过登录名获取当前用户在t_user表中的数据 -->
	<select id="getUserByLoginName" resultType="TUser">
		SELECT 
			<include refid="tUserColumns"/>
		FROM t_user a
		<include refid="tUserJoins"/>
		WHERE a.t_userid = #{loginName}
	</select>
	
	<!-- 通过登录用户名修改t_user表中的数据 -->
	<update id="updUser" parameterType="TUser">
		update t_user set 
		t_email = #{tEmail},
		t_phone = #{tPhone},
		qq = #{qq},
		wx = #{wx},
		t_company = #{tCompany},
		t_companyurl = #{tCompanyurl},
		createtime=now()
		where t_loginname = #{tLoginname}
	</update>
	
	<!-- 更新sys_user中的数据通过登录名 -->
	<update id="updSysUser" parameterType="TUser">
		update sys_user set 
		email = #{tEmail},
		phone = #{tPhone},
		mobile = #{tPhone}
		where login_name = #{tLoginname}
	</update>
	
	<!-- 通过登录用户名获取密码 -->
	<select id="getPassword" resultType="java.lang.String">
		select password from sys_user where login_name=#{loginName}
	</select>
	
	<!-- 通过当前登录的手机号标识获取自己已邀请多少人 -->
	<select id="getcountbyinviter" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(1) as count from t_user where t_inviter=#{tPhone}
	</select>
	
	<!-- 这个是保存二维码地址的操作--> 
	<insert id="addpicturecode" parameterType="java.util.Map">
		insert into t_erweimacode(
		id,
		te_codeurl,
		te_codeinfo
		)values(
		#{id},
		#{pathName},
		#{phone}
		)
	</insert>
	
	<!-- 通过手机号获取用户名密码 -->
	<select id="getTUserByPhone" resultType="TUser">
		select t_loginname as tLoginname,reserve1 from t_user where t_phone=#{tPhone}
	</select>
	
	<!-- 检查用户名是否已经存在了 -->
	<select id="checkusername" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(1) as count from t_user where t_loginName=#{username}
	</select>
	
	<!-- 检查手机号是否已经存在了 -->
	<select id="checkphone" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(1) as count from t_user where t_phone=#{phone}
	</select>
	
	<!-- 通过当前用户id查询出他下面推广的A类的人总数 -->
	<select id="getcountExtendA" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(distinct a.id)as 'count' from t_user a 
		left join t_user b on a.t_inviter=b.id 
		where b.id=#{id} 
	</select>
	
	<!-- 通过当前用户id查询出他下面推广的B类的人总数 -->
	<select id="getcountExtendB" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(distinct a.id) from t_user a 
		left join t_user b on a.t_inviter=b.id 
		left join t_user c on b.t_inviter=c.id
		where c.id=#{id} 
	</select>
	
	<!-- 通过当前用户id查询出他下面推广的C类的人总数 -->
	<select id="getcountExtendC" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(distinct a.id) from t_user a 
		left join t_user b on a.t_inviter=b.id 
		left join t_user c on b.t_inviter=c.id
		left join t_user d on c.t_inviter=d.id 
		where d.id=#{id}
	</select>
	
	<!-- 通过id找到自己当前存储的二维码图片路径 -->
	<select id="getphotourl" parameterType="java.lang.String" resultType="java.lang.String">
		select te_codeurl as 'url' from t_erweimacode where te_codeinfo=#{id}
	</select>
	
	<!-- 通过当前用户id查询出他下面推广的A类的人总数 -->
	<select id="getListExtendA" parameterType="java.lang.String" resultType="tUser">
		select a.t_phone,a.createtime from t_user a 
		left join t_user b on a.t_inviter=b.id 
		where b.id=#{id} 
	</select>
	
	<!-- 通过当前用户id查询出他下面推广的B类的人总数 -->
	<select id="getListExtendB" parameterType="java.lang.String" resultType="tUser">
		select a.t_phone,a.createtime from t_user a 
		left join t_user b on a.t_inviter=b.id 
		left join t_user c on b.t_inviter=c.id
		where c.id=#{id}
	</select>
	
	<!-- 通过当前用户id查询出他下面推广的C类的人总数 -->
	<select id="getListExtendC" parameterType="java.lang.String" resultType="tUser">
		select a.t_phone,a.createtime from t_user a 
		left join t_user b on a.t_inviter=b.id 
		left join t_user c on b.t_inviter=c.id
		left join t_user d on c.t_inviter=d.id 
		where d.id=#{id}
	</select>
	
	<!-- 这里是推广之后的奖励 -->
	<update id="updAcount" parameterType="TErweimaTask">
		update t_user set t_acount=t_acount+#{tetTaskprice} where id=#{tetUserid}
	</update>
	<!-- 上一级奖励 -->
	<update id="updAcountA">
		update t_user a set a.t_acount=a.t_acount+10 where a.id=
		(select c.id from (select b.t_inviter as 'id' from t_user b where b.id=#{id})c)
	</update>
	<!-- 上两级奖励 -->
	<update id="updAcountB">
		update t_user set t_acount=t_acount+5 where id=(select c.id from (select a.t_inviter as 'id' from t_user a,t_user b 
		where a.id=b.t_inviter and b.id=#{id})c)
	</update>
	<!-- 上三级奖励 -->
	<update id="updAcountC">
		update t_user set t_acount=t_acount+5 where id=
		(select d.id from(select a.t_inviter as 'id' from t_user a,t_user b,t_user c where c.t_inviter=b.id and b.t_inviter=a.id and c.id=#{id})d)
	</update>
	<!-- 每天凌晨更新签到信息 -->
	<update id="updAllsignBytimer">
		update t_user set reserve2='1'
	</update>
	
	<!-- 通过登录名设置状态为已签到 -->
	<update id="register">
		update t_user set reserve2='2',reserve3=reserve3+1 where t_loginname=#{loginName}
	</update>
	
	<!-- 通过申请的id，审核通过之后进行把对应的钱加到做任务的当前用户 -->
	<update id="updateSelfAcount" parameterType="java.util.Map">
		update t_user d set d.t_acount=d.t_acount+#{price} where d.id=#{userid}
	</update>
	
	<!-- 通过申请的id，审核通过之后进行把对应的钱加到A级用户 -->
	<update id="updateAcountA" parameterType="java.util.Map">
		update t_user a set a.t_acount=a.t_acount+#{priceA} where a.id=
		(select c.id from (select b.t_inviter as 'id' from t_user b where b.id=#{userid})c)
	</update>
	
	<!-- 通过申请的id，审核通过之后进行把对应的钱加到A级用户 -->
	<update id="updateAcountB" parameterType="java.util.Map">
		update t_user set t_acount=t_acount+#{priceB} where id=(select c.id from (select a.t_inviter as 'id' from t_user a,t_user b 
		where a.id=b.t_inviter and b.id=#{userid})c)
	</update>
	
	<!-- 通过申请的id，审核通过之后进行把对应的钱加到A级用户 -->
	<update id="updateAcountC" parameterType="java.util.Map">
		update t_user set t_acount=t_acount+#{priceC} where id=
		(select d.id from(select a.t_inviter as 'id' from t_user a,t_user b,t_user c where c.t_inviter=b.id and b.t_inviter=a.id and c.id=#{userid})d)
	</update>
	
	<!-- 向资金明细表中添加对应的信息 -->
	<insert id="addtomobileacountdtl" parameterType="java.util.Map">
		insert into t_mobile_acountdtl(
		id,
		tma_userid,
		tma_dtlname,
		tma_jine,
		createtime,
		tma_reserve1,
		tma_fromuserid
		)values(
		#{id},
		#{tma_userid},
		#{tma_dtlname},
		#{tma_jine},
		now(),
		#{tma_reserve1},
		#{tma_fromuserid}
		)
	</insert>
	
	<!-- 通过申请的id获取所有的ABC级用户的id -->
	<select id="getAllmessageByApplyid" resultType="java.util.Map">
		select a.id,a.t_phone,IFNULL(b.id,'') as 'Auserid',IFNULL(c.id,'') as 'Buserid',IFNULL(d.id,'') as 'Cuserid',
		f.tmt_name,f.tmt_price,f.tmt_rebateA,f.tmt_rebateB,f.tmt_rebateC
		from t_user a
		left join t_user b on a.t_inviter=b.id
		left join t_user c on b.t_inviter=c.id
		left join t_user d on c.t_inviter=d.id
		left join t_mobiletask_apply e on e.tma_userid=a.id
		left join t_mobile_task f on e.tma_taskid=f.id
		where e.id=#{id}
	</select>
	<!-- 获取此登录账号的30条消息记录 -->
	<select id="getmessageList" resultType="java.util.Map">
		select * from t_mobile_acountdtl a,t_user b 
		where a.tma_userid=b.id and b.t_loginName=#{loginName} order by a.createtime desc limit 30
	</select>
	
	<!-- 获取理财金的天数 -->
	<select id="getLCdaysByLoginName" parameterType="java.lang.String" resultType="java.lang.Integer">
		select (TO_DAYS(now())-TO_DAYS(a.createtime))as 'day' from t_user a where a.t_loginName=#{loginName}
	</select>
	
	<!-- 如果数据库中没有姓名和身份证号，就向数据库中插入对应的信息 -->
	<update id="setnameandpid" parameterType="TUser">
		update t_user set t_name=#{tName},reserve4=#{reserve4} where id=#{id} 
	</update>
	
	<!-- 此账号对应的A级用户的返现信息 -->
	<select id="getAfanxianAll" resultType="java.util.Map">
		select a.tma_dtlname,a.tma_jine,a.createtime from t_mobile_acountdtl a
		left join t_user b on a.tma_fromuserid=b.id
		left join t_user c on c.id=b.t_inviter
		where a.tma_reserve1='2'
		and a.tma_userid=c.id and c.id=#{id}
		UNION
		select a.tma_dtlname,a.tma_jine,a.createtime from t_mobile_acountdtl a
		left join t_user b on a.tma_fromuserid=b.id
		left join t_user c on c.id=b.t_inviter
		left join t_user d on d.id=c.t_inviter
		where a.tma_reserve1='2'
		and a.tma_userid=d.id and d.id=#{id}
		UNION
		select a.tma_dtlname,a.tma_jine,a.createtime from t_mobile_acountdtl a
		left join t_user b on a.tma_fromuserid=b.id
		left join t_user c on c.id=b.t_inviter
		left join t_user d on d.id=c.t_inviter
		left join t_user e on e.id=d.t_inviter
		where a.tma_reserve1='2'
		and a.tma_userid=e.id and e.id=#{id}
	</select>
	
	<select id="getBfanxianAll" resultType="java.util.Map">
		select b.t_phone,d.tmt_rebateA as 'moneyway',d.tmt_name,a.createtime from t_mobiletask_apply a
		left join t_user b on a.tma_userid=b.id
		left join t_user c on c.id=b.t_inviter
		left join t_mobile_task d on a.tma_taskid=d.id
		where a.tma_status='1'
		and c.id=#{id}
		UNION
		select b.t_phone,d.tmt_rebateB as 'moneyway',d.tmt_name,a.createtime from t_mobiletask_apply a
		left join t_user b on a.tma_userid=b.id
		left join t_user c on c.id=b.t_inviter
		left join t_user e on e.id=c.t_inviter
		left join t_mobile_task d on a.tma_taskid=d.id
		where a.tma_status='1'
		and e.id=#{id}
		UNION
		select b.t_phone,d.tmt_rebateC as 'moneyway',d.tmt_name,a.createtime from t_mobiletask_apply a
		left join t_user b on a.tma_userid=b.id
		left join t_user c on c.id=b.t_inviter
		left join t_user e on e.id=c.t_inviter
		left join t_user f on e.id=e.t_inviter
		left join t_mobile_task d on a.tma_taskid=d.id
		where a.tma_status='1'
		and f.id=#{id}
	</select>
	
	<select id="getCfanxianAll" resultType="java.util.Map">
		select b.t_phone,d.tmt_rebateA,d.tmt_name,a.createtime from t_mobiletask_apply a
		left join t_user b on a.tma_userid=b.id
		left join t_user c on c.id=b.t_inviter
		left join t_mobile_task d on a.tma_taskid=d.id
		where a.tma_status='3'
		and c.id=#{id}
		UNION
		select b.t_phone,d.tmt_rebateB,d.tmt_name,a.createtime from t_mobiletask_apply a
		left join t_user b on a.tma_userid=b.id
		left join t_user c on c.id=b.t_inviter
		left join t_user e on e.id=c.t_inviter
		left join t_mobile_task d on a.tma_taskid=d.id
		where a.tma_status='3'
		and e.id=#{id}
		UNION
		select b.t_phone,d.tmt_rebateC,d.tmt_name,a.createtime from t_mobiletask_apply a
		left join t_user b on a.tma_userid=b.id
		left join t_user c on c.id=b.t_inviter
		left join t_user e on e.id=c.t_inviter
		left join t_user f on e.id=e.t_inviter
		left join t_mobile_task d on a.tma_taskid=d.id
		where a.tma_status='3'
		and f.id=#{id}
	</select>
	
	<!-- 获取今日收益 -->
	<select id="gettodayMoney" resultType="java.lang.String">
		select (sum(tma_jine)+0.5) as count from t_mobile_acountdtl where TO_DAYS(now())=TO_DAYS(createtime) and tma_userid=#{id}
	</select>
</mapper>